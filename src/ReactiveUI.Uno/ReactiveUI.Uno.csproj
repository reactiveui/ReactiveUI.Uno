<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(UnoTargetFrameworks)</TargetFrameworks>
    <UnoSingleProject>true</UnoSingleProject>
    <OutputType>Library</OutputType>
    <!-- Ensures the .xr.xml files are generated in a proper layout folder -->
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <!--
      UnoFeatures let's you quickly add and manage implicit package references based on the features you want to use.
      https://aka.platform.uno/singleproject-features
    -->
    <UnoFeatures>
      SkiaRenderer;
    </UnoFeatures>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
    <RuntimeIdentifiers>win-x64;win-x86;win-arm64</RuntimeIdentifiers>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
    <!-- <FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" RuntimeFrameworkVersion="10.0.22621.28" />
    <FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" TargetingPackVersion="10.0.22621.28" /> -->
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
    <PackageReference Include="Microsoft.WindowsAppSDK" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="ReactiveUI" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.EndsWith('0-browserwasm'))">
    <PackageReference Include="Reactive.Wasm" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="Resources\ReactiveUI.Uno.xaml" />
  </ItemGroup>
</Project>